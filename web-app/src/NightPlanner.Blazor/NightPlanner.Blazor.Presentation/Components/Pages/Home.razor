@page "/"
@using NightPlanner.Blazor.Presentation.ApiClients.TaskTracker
@using NightPlanner.Blazor.Presentation.ApiServices.Contracts
@using NightPlanner.Blazor.Presentation.Components.Modals.Challenges
@using NightPlanner.Blazor.Presentation.Components.Lists
@using NightPlanner.Blazor.Presentation.Models.Challenges
@inject ITelegramAuthenticationService TelegramAuthenticationService
@inject IChallengesApi ChallengesApi
<PageTitle>Home</PageTitle>

<div class="w-100 px-1">
        <div>
            <ChallengesList Challenges="_challenges"/>
        </div>

        <div class="d-flex">
            <div class="mx-auto mt-2">
                <CreateModalForm OnChallengeCreated="LoadChallenges"/>
            </div>
        </div>
</div>

@code {
    [Inject]
    protected PreloadService PreloadService { get; set; }
    
    private IReadOnlyCollection<ChallengeDto> _challenges = Array.Empty<ChallengeDto>();

    private bool _challengesLoading = false;
    
    private async Task LoadChallenges()
    {
        var userId = await TelegramAuthenticationService.GetTelegramUserId();
        
        PreloadService.Show();
        
        var challenges = await ChallengesApi.GetChallenges(userId);
        _challenges = challenges
            .Select(x => new ChallengeDto(x.Id, x.Name, x.Description))
            .ToArray();
        
        PreloadService.Hide();

        
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await LoadChallenges();
        }
    }

}